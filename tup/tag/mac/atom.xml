<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mac | TunnelsUP]]></title>
  <link href="https://www.tunnelsup.com/tup/tag/mac/atom.xml" rel="self"/>
  <link href="https://www.tunnelsup.com/"/>
  <updated>2018-04-09T19:11:42-07:00</updated>
  <id>https://www.tunnelsup.com/</id>
  <author>
    <name><![CDATA[Jack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using The Built-In macOS FTP, TFTP, SFTP, and HTTP Servers]]></title>
    <link href="https://www.tunnelsup.com/using-the-built-in-macos-ftp-tftp-sftp-and-http-servers/"/>
    <updated>2016-10-21T22:02:00-07:00</updated>
    <id>https://www.tunnelsup.com/using-the-built-in-macos-ftp-tftp-sftp-and-http-servers</id>
    <content type="html"><![CDATA[<p>The macOS and OSX operating systems come with built in FTP, TFTP, SFTP, and HTTP servers. Here is how to enable them and use them.</p>

<h2>FTP Server</h2>

<p>To start an FTP server use this terminal command:</p>

<p><code>
sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist
</code></p>

<p>Users will need to authenticate to the macOS system using standard logins that are already on the macOS. When someone logs in, they will arrive in <code>/Users/&lt;username&gt;/</code>.</p>

<p>To stop the FTP server, run the following:</p>

<p><code>
sudo launchctl unload -F /System/Library/LaunchDaemons/ftp.plist
</code></p>

<h2>TFTP Server</h2>

<p><code>
sudo launchctl load -F /System/Library/LaunchDaemons/tftp.plist
sudo launchctl start com.apple.tftpd
</code></p>

<p>The directory that serves files is <code>/private/tftpboot</code>.</p>

<p>To stop the TFTP server, either reboot or use this command:</p>

<p><code>
sudo launchctl unload -F /System/Library/LaunchDaemons/tftp.plist
</code></p>

<h2>SFTP Server</h2>

<p>This one is different. Go to system preferences then <code>Sharing</code>. Check the box to enabe <code>Remote Login</code>. Once this is done, other people will be able to ssh and sftp to your macOS system.</p>

<h2>HTTP Server</h2>

<p>Apache comes bundled with macOS. To start it, run this command.</p>

<p><code>
sudo apachectl start
</code></p>

<p>By default the files will be served from <code>/Library/WebServer/Documents</code>.</p>

<p>To disable the server, either reboot or do this command:</p>

<p><code>
sudo apachectl stop
</code></p>

<h2>Checking Status</h2>

<p>To check to see what&rsquo;s running, run the command:</p>

<p><code>
netstat -an | grep LISTEN
</code></p>

<p>This will show you which ports are open on your macOS. For example if you have Apache running, you will see the following:</p>

<p><code>
tcp46      0      0  *.80                   *.*                    LISTEN
</code></p>

<ul>
<li>HTTP = TCP 80</li>
<li>FTP = TCP 21</li>
<li>SSH = TCP 22</li>
<li>SFTP = TCP 22</li>
<li>TFTP = UDP 69</li>
</ul>


<p>Note that TFTP is on UDP and won&rsquo;t say listen. Just run <code>netstat -an | grep 69</code> to find if it&rsquo;s running.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX How to Lock the Screen]]></title>
    <link href="https://www.tunnelsup.com/mac-osx-how-to-lock-the-screen/"/>
    <updated>2016-09-23T18:18:00-07:00</updated>
    <id>https://www.tunnelsup.com/mac-osx-how-to-lock-the-screen</id>
    <content type="html"><![CDATA[<p>To lock the screen of a Macbook or Mac running OSX use the following key combination:</p>

<p><code>&lt;CONTROL&gt;</code> + <code>&lt;SHIFT&gt;</code> + <code>&lt;POWER&gt;</code></p>

<p>In order for the screen to be password protected follow these steps:</p>

<h3>1. Go to System Preferences</h3>

<p><img src="/images/mac-set-ip1.png" alt="Lock Screen Mac OSX" /><br></p>

<h3>2. Go to Security and Privacy</h3>

<p><img src="/images/lock1.png" alt="Lock Screen Mac OSX" /><br></p>

<h3>3. Check Require Password Immediately After Sleep</h3>

<p><img src="/images/lock2.png" alt="Lock Screen Mac OSX" /><br></p>

<p>Now when you lock the screen it will ask for a password to unlock it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to set a static IP on Mac OSX]]></title>
    <link href="https://www.tunnelsup.com/how-to-set-a-static-ip-on-mac-osx/"/>
    <updated>2016-09-22T21:28:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-set-a-static-ip-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Are you using a Macbook Pro or Macbook Air and want to know how to show the change the interface to use a static IP? Follow the steps below to complete this.</p>

<h2>1. Go to Preferences</h2>

<p>Click the Apple icon in the top left corner and click System Preferences.</p>

<p><img src="/images/mac-set-ip1.png" alt="Static IP" /><br></p>

<h2>2. Go to Network Settings</h2>

<p>Now find the <code>Network</code> icon and click it.</p>

<p><img src="/images/mac-set-ip2.png" alt="Static IP" /><br></p>

<h2>3. Change the Settings</h2>

<p>Find the interface you want to change the settings on and click it. Then select the interface settings you want to us. To set a static IP select the options <code>Manually</code> and fill in the fields. You can also set it to be DHCP where you&rsquo;ll be assigned an address automatically by a router.
<img src="/images/mac-set-ip3.png" alt="Static IP" /><br></p>

<p>If you need to change the DNS settings, click <code>advanced</code>.</p>

<p>Once done click apply and your settings should be applied right away.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to see the routing table on Mac OSX]]></title>
    <link href="https://www.tunnelsup.com/how-to-see-the-routing-table-on-mac-osx/"/>
    <updated>2016-09-20T20:39:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-see-the-routing-table-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Do you have a Macbook Pro or Macbook Air and want to know how to show the routes it has in the routing table? Are you looking for the Windows command <strong>route print</strong> equivalent in OSX? This post is for you.</p>

<h2>Show Routes</h2>

<p>This is the command to show routes on a Mac OSX:</p>

<p><code>
netstat -rn
</code></p>

<p>The <code>-r</code> flag means to show routes.</p>

<p>The <code>-n</code> flag means to not resolve IPs to hostnames.</p>

<p>Here is an example output of the command:</p>

<p>```
$ netstat -rn
Routing tables</p>

<p>Internet:
Destination        Gateway            Flags        Refs      Use   Netif Expire
default            192.168.20.1       UGSc           39        0     en0
127.0.0.1          127.0.0.1          UH              3    11132     lo0
192.168.20/24      link#4             UCS             8        0     en0
192.168.20.1       0:1f:ca:88:96:8c   UHLWIir        40       22     en0   1025
192.168.20.255     ff:ff:ff:ff:ff:ff  UHLWbI          0        8     en0
```</p>

<p>In the case above, the default gateway of this Mac is 192.168.20.1. Meaning all routes are pointing to that system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hosts file]]></title>
    <link href="https://www.tunnelsup.com/hosts-file/"/>
    <updated>2015-01-22T20:47:00-08:00</updated>
    <id>https://www.tunnelsup.com/hosts-file</id>
    <content type="html"><![CDATA[<p>The &lsquo;hosts&rsquo; file is a hostname to IP address map used for local DNS resolution. When a computer needs to talk to another computer it needs to first know the IP address of the second computer. This is where DNS converts a hostname to an IP address.</p>

<h2>DNS Order of Operations</h2>

<p>When a computer needs to resolve a hostname it follows these steps.</p>

<ol>
<li>Check if the host is the computer itself</li>
<li>Check the hosts file to see if there is an entry there</li>
<li>Do a DNS server query</li>
<li>If still not resolved, a Windows computer will do a local NetBIOS query to see if anyone on the local network has that hostname</li>
</ol>


<p>By adding a host to the hosts file this will force the host to be resolved to the given IP instead of querying the DNS server. Some reasons to do this are:</p>

<ul>
<li>Creating a hosts entry for a hostname to match a SSL certificate value.</li>
<li>Create a hosts entry to block access to a specific website. By mapping a hostname to 127.0.0.1, any request to that hostname won&rsquo;t leave the computer making the request.</li>
<li>Create a hosts entry to make static DNS resolutions.</li>
</ul>


<h2>Syntax</h2>

<p>No matter what OS you&rsquo;re using the syntax is the same for all of them. Edit the hosts file using any kind of text editor like notepad or vi. Make an entry like the following. Save it and immediately on saving the file the entries will be live.</p>

<p><code>
93.184.216.34     example.com
172.16.2.2        mysite.com
</code></p>

<p>This means that if the user tries to go to <a href="http://mysite.com">http://mysite.com</a> they will be directed to 172.16.2.2.</p>

<h2>Location</h2>

<p>The hosts file is in a different location depending on the OS.</p>

<h4>Windows Hosts File</h4>

<ul>
<li>Windows 8 <code>C:\Windows\System32\drivers\etc\</code></li>
<li>Windows 7 <code>C:\Windows\system32\drivers\etc\</code></li>
<li>Windows XP  <code>C:\Windows\system32\drivers\etc\</code></li>
<li>Windows NT  <code>C:\Windows\system32\drivers\etc\</code></li>
<li>Windows 95  <code>C:\Windows\</code></li>
</ul>


<h4>Mac Hosts File</h4>

<p>For OSX 10.2 and up the hosts file is found in <code>/etc/hosts</code>.</p>

<h4>Linux Hosts File</h4>

<p>In Unix and Linux operating systems the file is located in <code>/etc/hosts</code>.</p>
]]></content>
  </entry>
  
</feed>
