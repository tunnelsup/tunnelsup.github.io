<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: misc | TunnelsUP]]></title>
  <link href="https://www.tunnelsup.com/tup/tag/misc/atom.xml" rel="self"/>
  <link href="https://www.tunnelsup.com/"/>
  <updated>2019-01-15T19:55:07-08:00</updated>
  <id>https://www.tunnelsup.com/</id>
  <author>
    <name><![CDATA[Jack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Highlights from DEFCON 25]]></title>
    <link href="https://www.tunnelsup.com/highlights-from-defcon-25/"/>
    <updated>2017-08-09T12:55:00-07:00</updated>
    <id>https://www.tunnelsup.com/highlights-from-defcon-25</id>
    <content type="html"><![CDATA[<p>DEFCON 25 is now over. The largest hacking conference in the world continues to grow larger each year. Previous years there were 18-22,000 attendees. This year over 23,000 people made it to Ceasars Palace for the talks, workshops, parties, and social activities.</p>

<p>Here are some notable highlights from the event.</p>

<h2>On Lockdown</h2>

<p>When DEFCON rolls into town, some shops close their shutters to avoid potential threats. In previous years we&rsquo;ve seen the neon signs become blue screened, and many other pranks and shenanigans. This year we saw this.</p>

<p><img src="https://www.tunnelsup.com/images/defcon25-2.png">
<img src="https://www.tunnelsup.com/images/defcon25-1.png"></p>

<p>It doesn&rsquo;t seem like UPS gets it.</p>

<h2>Voting machines not as secure as you think.</h2>

<p>The big news this event is the voting machines. A total of 30 different voting machines were brought to the conference to test their security, and hilarity ensued.</p>

<p>The machines were put on the network and people were encouraged to attack them through the network. In the first 90 minutes, the first voting machine was popped. And soon additional voting machines were also found to have weak security.</p>

<p>It seems these machines weren&rsquo;t updated with patches and had additional weak security controls. When one attendee got into a machine they found the machine was still holding 650,000 voter names and votes. This was a machine that was purchased on ebay. So not only are the machine weak the data on them isn&rsquo;t being looked after properly. Another machine was found to be able to remotely change the votes on the system by a hacker.</p>

<p>Many attendees were saying the slot machines in the casino&rsquo;s are more secure than the voting machines we use to run our democratic way of life. And this is true. The slot machines undergo strict audits, not only by the game makers, but also by the gaming board. Slot machines have a long history of being secure and bug free. We all hope this is an eye opener for voting machine companies and government to take the security of these more seriously.</p>

<p><a href="https://gizmodo.com/personal-info-of-650-000-voters-discovered-on-poll-mach-1797438462">Further reading >></a></p>

<h2>Is a Car Wash Secure?</h2>

<p>Security researchers Billy Rios of WhiteScope Security and Jonathan Butts of QED Secure Solutions gave a talk that demonstrates how they can remotely take over a car wash. In this demonstration they were able to close the bay doors of the car wash and change the behavior of the spray jets. They did this through a network based attack where they could have been on the other side of the globe.</p>

<p>One reason someone might want to do this is to physically harm or trap a person in a car wash. By letting the bay doors down at the right time it can smash the car and driver which can severely impact the car and driver.</p>

<p>To be safe, maybe avoid car washes that have automatic bay doors that can trap you inside.</p>

<p><a href="https://nypost.com/2017/08/01/hackers-are-now-targeting-car-washes/amp/">Further reading >></a></p>

<h2>Work Badges Easily Cloned</h2>

<p>At DEFCON 18 I first saw someone close a security badge. The ones you might get at work, or give you access to a gated community or something. The equipment then was clunky and slow. You needed to be almost touching the badge and it would take a while.</p>

<p>The technology has improved tremendously for cloning these badges. A talk was given by Dennis Maldonado that demonstrated he can read the data of a badge from 2 feet away and then send that another 30 feet away to be processed.</p>

<p>He was able to take it a step further and make the whole thing trigger from his Pebble watch and an Android app.</p>

<p>To avoid being attacked like this and having your badge cloned without you knowing it, keep it in a safe place when not using it and consider using and RF blocker wallet to store it in.</p>

<p><a href="https://mashable.com/2017/07/27/rfid-cloning-made-easy-defcon/#u5CjK3MdRPq4">Further reading >></a></p>

<h2>Safe Cracking Robot</h2>

<p>Sparkfun founder Nathan Seidle built a combination lock cracking robot.</p>

<p><img src="https://www.tunnelsup.com/images/defcon25-3.png"></p>

<p>To demonstrate it, he bought a safe from Home Depot, attached his robot to it, and within 30 minutes the robot cracked the safe. The robot would rotate the knob back and forth feeling for just the right tension to open the safe. It needed to try numerous combinations to finally get it, but it was able to do it rapidly enough to be able to demonstrate it live on stage.</p>

<p>This certainly makes the future of safes and locks an interesting concept. This is something you might see in a sci fi movie, and is now becoming a reality.</p>

<p><a href="https://mashable.com/2017/07/28/safe-cracking-robot-defcon/#Dd6Zbft5RgqP">Further reading>></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to edit iptables so it persists through reboot CentOS]]></title>
    <link href="https://www.tunnelsup.com/how-to-edit-iptables-so-it-persists-through-reboot-centos/"/>
    <updated>2017-06-11T23:13:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-edit-iptables-so-it-persists-through-reboot-centos</id>
    <content type="html"><![CDATA[<p>Usually iptables are controlled by the <strong>root</strong> user or someone with <strong>sudoer</strong> privs.</p>

<p>You can check what iptables rules there are using:</p>

<p><code>iptables -L -n</code></p>

<p>That lists all the rules, and doesn&rsquo;t resolve port names or IP addresses.</p>

<p>To edit the rules, edit the following file:</p>

<p><code>/etc/sysconfig/iptables</code></p>

<p>Then you can reload those rules by doing the following:</p>

<p><code>/etc/init.d/iptables restart</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux TTY and Terminal Commands]]></title>
    <link href="https://www.tunnelsup.com/linux-tty-and-terminal-commands/"/>
    <updated>2017-05-03T11:19:00-07:00</updated>
    <id>https://www.tunnelsup.com/linux-tty-and-terminal-commands</id>
    <content type="html"><![CDATA[<p>A few notes for using the Linux TTY terminal.</p>

<h2>Switch Terminals</h2>

<p>You can switch TTY terminals by doing:</p>

<p><code>CNTRL</code>+<code>ALT</code>+<code>F#</code></p>

<p>F2 will take you to TTY2, F3 TTY3 etc.</p>

<p>If you are using a Linux GUI, you can still use this combo to switch to the console. To get back to the GUI do <code>CNTRL</code>+<code>ALT</code>+<code>F7</code>.</p>

<h2>Scrolling</h2>

<p>If you need to scroll up or town while at the console, do:</p>

<p><code>SHIFT</code>+<code>PG UP/DOWN</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using The Built-In macOS FTP, TFTP, SFTP, and HTTP Servers]]></title>
    <link href="https://www.tunnelsup.com/using-the-built-in-macos-ftp-tftp-sftp-and-http-servers/"/>
    <updated>2016-10-21T22:02:00-07:00</updated>
    <id>https://www.tunnelsup.com/using-the-built-in-macos-ftp-tftp-sftp-and-http-servers</id>
    <content type="html"><![CDATA[<p>The macOS and OSX operating systems come with built in FTP, TFTP, SFTP, and HTTP servers. Here is how to enable them and use them.</p>

<h2>FTP Server</h2>

<p>To start an FTP server use this terminal command:</p>

<p><code>
sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist
</code></p>

<p>Users will need to authenticate to the macOS system using standard logins that are already on the macOS. When someone logs in, they will arrive in <code>/Users/&lt;username&gt;/</code>.</p>

<p>To stop the FTP server, run the following:</p>

<p><code>
sudo launchctl unload -F /System/Library/LaunchDaemons/ftp.plist
</code></p>

<h2>TFTP Server</h2>

<p><code>
sudo launchctl load -F /System/Library/LaunchDaemons/tftp.plist
sudo launchctl start com.apple.tftpd
</code></p>

<p>The directory that serves files is <code>/private/tftpboot</code>.</p>

<p>To stop the TFTP server, either reboot or use this command:</p>

<p><code>
sudo launchctl unload -F /System/Library/LaunchDaemons/tftp.plist
</code></p>

<h2>SFTP Server</h2>

<p>This one is different. Go to system preferences then <code>Sharing</code>. Check the box to enabe <code>Remote Login</code>. Once this is done, other people will be able to ssh and sftp to your macOS system.</p>

<h2>HTTP Server</h2>

<p>Apache comes bundled with macOS. To start it, run this command.</p>

<p><code>
sudo apachectl start
</code></p>

<p>By default the files will be served from <code>/Library/WebServer/Documents</code>.</p>

<p>To disable the server, either reboot or do this command:</p>

<p><code>
sudo apachectl stop
</code></p>

<h2>Checking Status</h2>

<p>To check to see what&rsquo;s running, run the command:</p>

<p><code>
netstat -an | grep LISTEN
</code></p>

<p>This will show you which ports are open on your macOS. For example if you have Apache running, you will see the following:</p>

<p><code>
tcp46      0      0  *.80                   *.*                    LISTEN
</code></p>

<ul>
<li>HTTP = TCP 80</li>
<li>FTP = TCP 21</li>
<li>SSH = TCP 22</li>
<li>SFTP = TCP 22</li>
<li>TFTP = UDP 69</li>
</ul>


<p>Note that TFTP is on UDP and won&rsquo;t say listen. Just run <code>netstat -an | grep 69</code> to find if it&rsquo;s running.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Create SSH Tunnels]]></title>
    <link href="https://www.tunnelsup.com/how-to-create-ssh-tunnels/"/>
    <updated>2016-10-09T16:38:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-create-ssh-tunnels</id>
    <content type="html"><![CDATA[<p>Besides sending ssh data, the ssh protocol can tunnel other traffic between two hosts. The most common tunnels are remote and local. Knowing how to spin up an ssh tunnel can help you reach otherwise inaccessible networks and systems.</p>

<p>These examples work from a linux prompt or a macOS terminal. It&rsquo;s possible to do the same thing in Windows using applications like putty or mobaXterm.</p>

<h2>Local ssh Port Forwarding</h2>

<p>You can use a local ssh tunnel when you want to get to a resource that you can&rsquo;t get to directly, but a ssh server that you have access to can. Here are some scenarios.</p>

<h4>Proxy to Remote Server</h4>

<p><img src="/images/ssh-local2.png">
In the image above, the blue host cannot reach <code>http://192.168.0.3</code> but can ssh to 192.168.0.2. The following ssh command executed on the <strong>blue host</strong> will allow the blue host to reach the red host.</p>

<p><code>
ssh -L 8080:192.168.0.3:80 reduser@192.168.0.2
</code></p>

<p>Now the blue host can open a browser, and go to <code>http://localhost:8080</code> and be presented with the webpage hosted on 192.168.0.3.</p>

<h4>Local Port Forward</h4>

<p><img src="/images/ssh-local1.png">
In the image above, the blue host wants to connect to the red host on port 80 but there&rsquo;s a firewall in between which is denying this. Because the blue host can ssh to the red host, we can create a local port forwarding ssh tunnel to access that port.</p>

<p>The command on the blue host will be:
<code>
ssh -L 8080:192.168.0.2:80 reduser@192.168.0.2
</code></p>

<p>Now when the blue host opens a browser and goes to <code>http://localhost:8080</code> they will be able to see whatever the red server has at port 80.</p>

<h4>Local Port Forwarding Syntax</h4>

<p>This syntax to create a local ssh port forwarding tunnel is this:</p>

<p><code>
ssh -L &lt;LPORT&gt;:&lt;RHOST&gt;:&lt;RPORT&gt; &lt;GATEWAY&gt;
</code></p>

<h2>Remote SSH Port Forwarding</h2>

<p>In this scenario we are creating a reverse ssh tunnel. Here we can initiate an ssh tunnel in one direction, then use that tunnel to create an ssh tunnel back the other way. This may be useful for when you drop a drone computer inside a network and want it to &ldquo;phone home&rdquo;. Then when it phones home, you can connect to it through the established ssh tunnel.</p>

<p><img src="/images/ssh-remote.png">
We are on the green host and want to ssh to the blue host. However, the firewall blocks this connection directly. Because the blue host can ssh to the green host, we can connect using that, and when the green host wants to ssh back to the blue host, it can ride along this previously established tunnel.</p>

<p>Blue host initiates ssh tunnel like this:
<code>
ssh -R 2222:localhost:22 greenuser@192.168.0.2
</code></p>

<p>This opens port 2222 on the green host, which is then port forwarding that to port 22 on the blue host. So if the green host were to ssh to itself on port 2222 it would then reach the blue host.</p>

<p>Green host can now ssh to blue host like this:
<code>
ssh -p 2222 blueuser@localhost
</code></p>

<h2>Using the -N Option</h2>

<p>When using ssh, you can specify the <code>-N</code> flag which tells ssh you don&rsquo;t need to send any commands over the ssh connection when it&rsquo;s established. This option is often used when making tunnels since often we don&rsquo;t need to actually get a prompt.</p>

<h2>Autossh</h2>

<p>The autossh command is used to add persistence to your tunnels. The job it has is to verify your ssh connection is up, and if it&rsquo;s not, create it.</p>

<p>Here is an autossh command which you may recognize.
<code>
autossh -N -i /home/blueuser/.ssh/id_rsa -R 2222:localhost:22 greenuser@192.168.0.3
</code></p>

<p>The <code>-i /home/blueuser/.ssh/id_rsa</code> option says to use a certificate to authenticate this ssh connection. Check out this post to <a href="/ssh-without-password/">learn more about ssh certificates</a>.</p>

<p>Now when your tunnel goes down it will automatically try to reconnect and keep trying until it is successful. To make it persistent through a reboot, add the ssh command as a cron job.</p>

<h2>Related Articles</h2>

<ul>
<li><a href="/how-to-ssh-like-a-pro/">How to ssh like a pro</a></li>
<li><a href="/ssh-without-password/">How to ssh without a password</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
