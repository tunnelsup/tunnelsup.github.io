<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TunnelsUP]]></title>
  <link href="https://www.tunnelsup.com/atom.xml" rel="self"/>
  <link href="https://www.tunnelsup.com/"/>
  <updated>2016-10-09T21:04:32-07:00</updated>
  <id>https://www.tunnelsup.com/</id>
  <author>
    <name><![CDATA[Jack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Create SSH Tunnels]]></title>
    <link href="https://www.tunnelsup.com/how-to-create-ssh-tunnels/"/>
    <updated>2016-10-09T16:38:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-create-ssh-tunnels</id>
    <content type="html"><![CDATA[<p>Besides sending ssh data, the ssh protocol can tunnel other traffic between two hosts. The most common tunnels are remote and local. Knowing how to spin up an ssh tunnel can help you reach otherwise inaccessible networks and systems.</p>

<p>These examples work from a linux prompt or a macOS terminal. It&rsquo;s possible to do the same thing in Windows using applications like putty or mobaXterm.</p>

<h2>Local ssh Port Forwarding</h2>

<p>You can use a local ssh tunnel when you want to get to a resource that you can&rsquo;t get to directly, but a ssh server that you have access to can. Here are some scenarios.</p>

<h4>Proxy to Remote Server</h4>

<p><img src="https://www.tunnelsup.com/images/ssh-local2.png">
In the image above, the blue host cannot reach <code>http://192.168.0.3</code> but can ssh to 192.168.0.2. The following ssh command executed on the <strong>blue host</strong> will allow the blue host to reach the red host.</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ssh -L 8080:192.168.0.3:80 reduser@192.168.0.2</span></code></pre></td></tr></table></div></figure>


<p>Now the blue host can open a browser, and go to <code>http://localhost:8080</code> and be presented with the webpage hosted on 192.168.0.3.</p>

<h4>Local Port Forward</h4>

<p><img src="https://www.tunnelsup.com/images/ssh-local1.png">
In the image above, the blue host wants to connect to the red host on port 80 but there&rsquo;s a firewall in between which is denying this. Because the blue host can ssh to the red host, we can create a local port forwarding ssh tunnel to access that port.</p>

<p>The command on the blue host will be:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ssh -L 8080:192.168.0.2:80 reduser@192.168.0.2</span></code></pre></td></tr></table></div></figure>


<p>Now when the blue host opens a browser and goes to <code>http://localhost:8080</code> they will be able to see whatever the red server has at port 80.</p>

<h4>Local Port Forwarding Syntax</h4>

<p>This syntax to create a local ssh port forwarding tunnel is this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ssh -L &lt;LPORT&gt;:&lt;RHOST&gt;:&lt;RPORT&gt; &lt;GATEWAY&gt;</span></code></pre></td></tr></table></div></figure>


<h2>Remote SSH Port Forwarding</h2>

<p>In this scenario we are creating a reverse ssh tunnel. Here we can initiate an ssh tunnel in one direction, then use that tunnel to create an ssh tunnel back the other way. This may be useful for when you drop a drone computer inside a network and want it to &ldquo;phone home&rdquo;. Then when it phones home, you can connect to it through the established ssh tunnel.</p>

<p><img src="https://www.tunnelsup.com/images/ssh-remote.png">
We are on the green host and want to ssh to the blue host. However, the firewall blocks this connection directly. Because the blue host can ssh to the green host, we can connect using that, and when the green host wants to ssh back to the blue host, it can ride along this previously established tunnel.</p>

<p>Blue host initiates ssh tunnel like this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ssh -R 2222:localhost:22 greenuser@192.168.0.2</span></code></pre></td></tr></table></div></figure>


<p>This opens port 2222 on the green host, which is then port forwarding that to port 22 on the blue host. So if the green host were to ssh to itself on port 2222 it would then reach the blue host.</p>

<p>Green host can now ssh to blue host like this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ssh -p 2222 blueuser@localhost</span></code></pre></td></tr></table></div></figure>


<h2>Using the -N Option</h2>

<p>When using ssh, you can specify the <code>-N</code> flag which tells ssh you don&rsquo;t need to send any commands over the ssh connection when it&rsquo;s established. This option is often used when making tunnels since often we don&rsquo;t need to actually get a prompt.</p>

<h2>Autossh</h2>

<p>The autossh command is used to add persistence to your tunnels. The job it has is to verify your ssh connection is up, and if it&rsquo;s not, create it.</p>

<p>Here is an autossh command which you may recognize.</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>autossh -N -i /home/blueuser/.ssh/id_rsa -R 2222:localhost:22 greenuser@192.168.0.3</span></code></pre></td></tr></table></div></figure>


<p>The <code>-i /home/blueuser/.ssh/id_rsa</code> option says to use a certificate to authenticate this ssh connection. Check out this post to <a href="https://www.tunnelsup.com/ssh-without-password/">learn more about ssh certificates</a>.</p>

<p>Now when your tunnel goes down it will automatically try to reconnect and keep trying until it is successful. To make it persistent through a reboot, add the ssh command as a cron job.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading ESXi to 5.5 and 6.0 Using a Bootable USB drive and macOS]]></title>
    <link href="https://www.tunnelsup.com/upgrading-esxi-using-a-bootable-usb-drive-and-macos/"/>
    <updated>2016-10-04T20:17:00-07:00</updated>
    <id>https://www.tunnelsup.com/upgrading-esxi-using-a-bootable-usb-drive-and-macos</id>
    <content type="html"><![CDATA[<p>I&rsquo;m not a VMWare expert so when it came time to upgrade my personal free ESXi host it took me a long time to figure it out. I didn&rsquo;t have any fancy tools or paid licenses to assist which meant it had to be done through a bootable USB drive. I had a really hard time figuring out what to do and then creating a bootable ESXi installation USB and wanted to document this for anyone else struggling.</p>

<h2>Download ESXi</h2>

<p>Even if you&rsquo;re doing an upgrade, you need to download the following:</p>

<p><strong>ESXi ISO image (Includes VMware Tools)</strong></p>

<p><a href="https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi">https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi</a></p>

<p>This is a free download from VMWare and on the same page is where your free license key is. Save that since you&rsquo;ll need it after the upgrade. It changes with each upgrade.</p>

<h2>Format the USB drive</h2>

<p>First determine which <code>/dev/driveN</code> your USB drive is plugged in to. You can simply do an <code>ls /dev/disk*</code> before and then again after you plug in the USB drive.</p>

<p>Next, you can format the drive using <code>Disk Utility</code> application that comes with macOS. When you format it, make sure to set the file system to FAT, and if you have the option, write it to the master boot record.</p>

<h2>Create a Bootable USB</h2>

<p>For some reason this part tripped me up a lot. Using a Mac running OSX I was able to get this done using UNetbootin.</p>

<h4><a href="https://unetbootin.github.io">Download UNetbootin</a></h4>

<h4>Choose the ISO Image and USB drive</h4>

<p><img class="center" src="https://www.tunnelsup.com/images/esxi-boot1.png"></p>

<h4>Overwrite menu.c32</h4>

<p>Make sure to choose yes on this option.
<img class="center" src="https://www.tunnelsup.com/images/esxi-boot2.png"></p>

<h2>Now Upgrade!</h2>

<p>Power down the ESXi host entirely, plug in a monitor and keyboard, and boot to the USB drive you just made. You&rsquo;ll have the option to install fresh or upgrade an existing ESXi installation.</p>

<p>The rest of this process is described in this video. Even though it is a video for 5.5 it is exactly the same for 6.0.</p>

<p><a href="https://www.youtube.com/watch?v=og6PeyXPQ8A">https://www.youtube.com/watch?v=og6PeyXPQ8A</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to remove meta data from a Visio document]]></title>
    <link href="https://www.tunnelsup.com/how-to-remove-meta-data-from-a-visio-document/"/>
    <updated>2016-10-02T12:59:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-remove-meta-data-from-a-visio-document</id>
    <content type="html"><![CDATA[<p>If you create a Visio diagram and either save it or convert it to a PDF, it will contain personal meta data in it. It will try to insert your name and company name.  This is sort of like exif data on an image. It&rsquo;s a good idea to sanitize and remove all personal information before sharing it with anyone. To remove this personal data from a Visio document do the following.</p>

<h2>1. Click File > Info > Remove Personal Information</h2>

<p><img src="https://www.tunnelsup.com/images/visio-removemeta1.PNG"></p>

<h2>2. Confirm the Removal</h2>

<p><img src="https://www.tunnelsup.com/images/visio-removemeta2.PNG"></p>

<p>Now when the document is saved and when a PDF is generated, the personal information will not be in the document.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to remove meta data from a PDF document]]></title>
    <link href="https://www.tunnelsup.com/how-to-remove-meta-data-from-a-pdf-document/"/>
    <updated>2016-09-29T23:02:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-remove-meta-data-from-a-pdf-document</id>
    <content type="html"><![CDATA[<p>Some PDF documents contain meta data which may contain the user&rsquo;s name that made it, the company they work for, their address, and more. This is sort of like exif data on an image. It&rsquo;s a good idea to sanitize any PDF before posting it to the Internet. To remove this personal data from a PDF do the following.</p>

<ol>
<li><p>Open Document in Adobe Acrobat
You&rsquo;ll need Acrobat and not simply Acrobat Reader. This tutorial used Adobe Acrobat XI.</p></li>
<li><p>Click the Tools Button
On the top right corner of the PDF click the Tools button.<br>
<img src="https://www.tunnelsup.com/images/pdf-meta1.PNG"></p></li>
<li><p>Click Sanitize
At the bottom of the tools is a Protection menu, expand it, and find the sanitize option.<br>
<img src="https://www.tunnelsup.com/images/pdf-meta2.PNG"></p></li>
<li><p>Confirm Sanitization
A popup box shows up and lets you verify what will be sanitized. <br>
<img src="https://www.tunnelsup.com/images/pdf-meta3.PNG"></p></li>
</ol>


<p>You&rsquo;ll then be prompted to save the sanitized document.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cisco ASA command to show listening ports]]></title>
    <link href="https://www.tunnelsup.com/cisco-asa-command-to-show-listening-ports/"/>
    <updated>2016-09-29T15:05:00-07:00</updated>
    <id>https://www.tunnelsup.com/cisco-asa-command-to-show-listening-ports</id>
    <content type="html"><![CDATA[<p>Do you wish there was a <code>netstat</code> command for a Cisco ASA? Are you looking to see what ports the ASA has open and is listening on? Try this command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ASA5506# sh asp table socket
</span><span class='line'>
</span><span class='line'>Protocol  Socket    State      Local Address        Foreign Address
</span><span class='line'>SSL       0001ebf8  LISTEN     172.16.3.1:443       0.0.0.0:*
</span><span class='line'>TCP       000216f8  LISTEN     172.16.3.1:22        0.0.0.0:*
</span><span class='line'>TCP       370c1d68  LISTEN     99.99.99.99:22       0.0.0.0:*
</span><span class='line'>TCP       3712d678  ESTAB      172.16.3.1:22        172.16.2.3:50233</span></code></pre></td></tr></table></div></figure>


<p>This command displays all of the ports that are open and established on the ASA.</p>

<p>The <code>state</code> indicates whether the port is listening or established.</p>

<p>The <code>local address</code> says which IP it&rsquo;s listening on. In the example above, 99.99.99.99 is the outside interface and the 172.16.3.1 is the inside interface.</p>

<p>The <code>foreign address</code> will show up when someone connects to that port. In this case I was ssh&rsquo;d into the firewall coming from 172.16.2.3.</p>

<p>The output above should be a direct reflection of the <code>ssh</code>, <code>telnet</code>, and <code>http</code> commands in the ASA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Metasploit Cheat Sheet and Video]]></title>
    <link href="https://www.tunnelsup.com/metasploit-cheat-sheet/"/>
    <updated>2016-09-28T10:41:00-07:00</updated>
    <id>https://www.tunnelsup.com/metasploit-cheat-sheet</id>
    <content type="html"><![CDATA[<p>Need a quick handy reference guide for Metasploit? I&rsquo;ve put together a bunch of the most common commands in a cheat sheet style for quick reference.</p>

<p><img class="center" src="https://www.tunnelsup.com/images/Metasploit.png">
Download: <a href="https://www.tunnelsup.com/images/Metasploit.png">[PNG Image]</a> - <a href="https://www.tunnelsup.com/images/Metasploit-CheatSheet.pdf">[PDF File]</a></p>

<h2>Video</h2>

<p>To get started with the cheat sheet I have made an instructional video on using Metasploit.</p>

<iframe width="770" height="460" src="https://www.youtube.com/embed/Y8IwBbJrny4" frameborder="0" allowfullscreen></iframe>


<p>If you find any problems with this please leave a comment below and I will update the guide periodically.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX How to Lock the Screen]]></title>
    <link href="https://www.tunnelsup.com/mac-osx-how-to-lock-the-screen/"/>
    <updated>2016-09-23T18:18:00-07:00</updated>
    <id>https://www.tunnelsup.com/mac-osx-how-to-lock-the-screen</id>
    <content type="html"><![CDATA[<p>To lock the screen of a Macbook or Mac running OSX use the following key combination:</p>

<p><code>&lt;CONTROL&gt;</code> + <code>&lt;SHIFT&gt;</code> + <code>&lt;POWER&gt;</code></p>

<p>In order for the screen to be password protected follow these steps:</p>

<h3>1. Go to System Preferences</h3>

<p><img src="https://www.tunnelsup.com/images/mac-set-ip1.png" alt="Lock Screen Mac OSX" /><br></p>

<h3>2. Go to Security and Privacy</h3>

<p><img src="https://www.tunnelsup.com/images/lock1.png" alt="Lock Screen Mac OSX" /><br></p>

<h3>3. Check Require Password Immediately After Sleep</h3>

<p><img src="https://www.tunnelsup.com/images/lock2.png" alt="Lock Screen Mac OSX" /><br></p>

<p>Now when you lock the screen it will ask for a password to unlock it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to set a static IP on Mac OSX]]></title>
    <link href="https://www.tunnelsup.com/how-to-set-a-static-ip-on-mac-osx/"/>
    <updated>2016-09-22T21:28:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-set-a-static-ip-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Are you using a Macbook Pro or Macbook Air and want to know how to show the change the interface to use a static IP? Follow the steps below to complete this.</p>

<h2>1. Go to Preferences</h2>

<p>Click the Apple icon in the top left corner and click System Preferences.</p>

<p><img src="https://www.tunnelsup.com/images/mac-set-ip1.png" alt="Static IP" /><br></p>

<h2>2. Go to Network Settings</h2>

<p>Now find the <code>Network</code> icon and click it.</p>

<p><img src="https://www.tunnelsup.com/images/mac-set-ip2.png" alt="Static IP" /><br></p>

<h2>3. Change the Settings</h2>

<p>Find the interface you want to change the settings on and click it. Then select the interface settings you want to us. To set a static IP select the options <code>Manually</code> and fill in the fields. You can also set it to be DHCP where you&rsquo;ll be assigned an address automatically by a router.
<img src="https://www.tunnelsup.com/images/mac-set-ip3.png" alt="Static IP" /><br></p>

<p>If you need to change the DNS settings, click <code>advanced</code>.</p>

<p>Once done click apply and your settings should be applied right away.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to see the routing table on Mac OSX]]></title>
    <link href="https://www.tunnelsup.com/how-to-see-the-routing-table-on-mac-osx/"/>
    <updated>2016-09-20T20:39:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-see-the-routing-table-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Do you have a Macbook Pro or Macbook Air and want to know how to show the routes it has in the routing table? Are you looking for the Windows command <strong>route print</strong> equivalent in OSX? This post is for you.</p>

<h2>Show Routes</h2>

<p>This is the command to show routes on a Mac OSX:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>netstat -rn</span></code></pre></td></tr></table></div></figure>


<p>The <code>-r</code> flag means to show routes.</p>

<p>The <code>-n</code> flag means to not resolve IPs to hostnames.</p>

<p>Here is an example output of the command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>$ netstat -rn
</span><span class='line'>Routing tables
</span><span class='line'>
</span><span class='line'>Internet:
</span><span class='line'>Destination        Gateway            Flags        Refs      Use   Netif Expire
</span><span class='line'>default            192.168.20.1       UGSc           39        0     en0
</span><span class='line'>127.0.0.1          127.0.0.1          UH              3    11132     lo0
</span><span class='line'>192.168.20/24      link#4             UCS             8        0     en0
</span><span class='line'>192.168.20.1       0:1f:ca:88:96:8c   UHLWIir        40       22     en0   1025
</span><span class='line'>192.168.20.255     ff:ff:ff:ff:ff:ff  UHLWbI          0        8     en0</span></code></pre></td></tr></table></div></figure>


<p>In the case above, the default gateway of this Mac is 192.168.20.1. Meaning all routes are pointing to that system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using For and While Loops in Python]]></title>
    <link href="https://www.tunnelsup.com/using-for-and-while-loops-in-python/"/>
    <updated>2016-09-20T17:48:00-07:00</updated>
    <id>https://www.tunnelsup.com/using-for-and-while-loops-in-python</id>
    <content type="html"><![CDATA[<p>Here are some tools to use to do loops in the Python language.</p>

<h2>The While Loop</h2>

<p>The <code>while</code> statement will continually cycle through the block of code until the condition is no longer true.</p>

<p>A forever loop:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&#39;This will never end!&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>To use a while loop to cycle through something 5 times, you could use this code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">repeat</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">while</span> <span class="n">repeat</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;Loop number: &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">repeat</span><span class="p">))</span>
</span><span class='line'>    <span class="n">repeat</span> <span class="o">+=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Using Continue and Break</h3>

<p>The <code>continue</code> statement is used when you want to go back to the beginning of the <code>while</code> loop.</p>

<p>The <code>break</code> statement is used when you want to leave the <code>while</code> loop all together.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">we_want_to_start_the_loop_over</span> <span class="o">==</span> <span class="bp">True</span><span class="p">):</span>
</span><span class='line'>      <span class="k">continue</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">we_want_to_end_the_loop</span> <span class="o">==</span> <span class="bp">True</span><span class="p">):</span>
</span><span class='line'>      <span class="k">break</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The For Loop</h2>

<p>Another way to do a loop is using a <code>for</code> statement.</p>

<h3>Using Range</h3>

<p>Here is an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
</span><span class='line'>  <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span><span class="o">+</span><span class="n">num</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will loop through 10 times because of the <code>range(10)</code> method and print out the value <strong>45</strong>.</p>

<p>The <code>range()</code> method allows 3 arguments to be passed to it. Here are 3 ways to use it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>       <span class="c"># will go from 0 to 10 counting by ones</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>    <span class="c"># will go from 5 to 10 counting by ones</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span> <span class="c"># will go from 5 to 1 counting backwards 1 at a time</span>
</span></code></pre></td></tr></table></div></figure>


<h3>For Each Item in a List</h3>

<p>If you want to do something with the values of a list, you can cycle through it like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">grades</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;A&#39;</span><span class="p">,</span> <span class="s">&#39;C&#39;</span><span class="p">,</span> <span class="s">&#39;B&#39;</span><span class="p">,</span> <span class="s">&#39;F&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">for</span> <span class="n">grade</span> <span class="ow">in</span> <span class="n">grades</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="n">grade</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Using Enumerate</h3>

<p>If you want to iterate through a list and make edits to the list you can do this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">grades</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;A&#39;</span><span class="p">,</span> <span class="s">&#39;C&#39;</span><span class="p">,</span> <span class="s">&#39;B&#39;</span><span class="p">,</span> <span class="s">&#39;F&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">for</span> <span class="n">n</span><span class="p">,</span><span class="n">i</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">grades</span><span class="p">):</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="s">&#39;F&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">grades</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="o">=</span><span class="s">&#39;A&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This changes all your F grades to As!</p>

<h3>Looping Through all Keys</h3>

<p>If using a dictionary, you can loop through all keys this way:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">inventory</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;apples&#39;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="s">&#39;peaches&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">}</span>
</span><span class='line'><span class="k">for</span> <span class="n">fruit</span> <span class="ow">in</span> <span class="n">inventory</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;We have &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">inventory</span><span class="p">[</span><span class="n">fruit</span><span class="p">])</span> <span class="o">+</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> <span class="n">fruit</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Regular Expressions in Python]]></title>
    <link href="https://www.tunnelsup.com/using-regular-expressions-in-python/"/>
    <updated>2016-09-14T21:44:00-07:00</updated>
    <id>https://www.tunnelsup.com/using-regular-expressions-in-python</id>
    <content type="html"><![CDATA[<p>If you need to do pattern matching on a string within Python, using a regular expression will be the best way to do it. Here are some basic examples to help you with this.</p>

<h2>Import Library</h2>

<p>To use any of the regular expressions you&rsquo;ll need to add this library:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>import re</span></code></pre></td></tr></table></div></figure>


<h2>Regex Compiler</h2>

<p>Create the regex object using the <code>compile()</code> method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">phone_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;\d\d\d-\d\d\d-\d\d\d\d&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This creates or defines the regex object which we can then use against a string.</p>

<p>The <code>r</code> here indicates a raw string.</p>

<p>I recommend building and testing your regex with a tool like <a href="http://regexpal.com.">http://regexpal.com.</a></p>

<h2>Matching Regex Objects</h2>

<p>Once the regex object is defined you can use the <code>search()</code> method like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">phone_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;\d\d\d-\d\d\d-\d\d\d\d&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">search_results</span> <span class="o">=</span> <span class="n">phone_regex</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;My number is 310-429-4019.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The results of this are:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Results: &#39;</span> <span class="o">+</span> <span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">())</span>
</span><span class='line'><span class="n">Results</span><span class="p">:</span> <span class="mi">310</span><span class="o">-</span><span class="mi">429</span><span class="o">-</span><span class="mi">4019</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>search()</code> method will return the <strong>first</strong> match it finds in the string.</p>

<p>The results are stored in the <code>group()</code> method of your variable.</p>

<h2>Using Parenthesis to Form Groups</h2>

<p>If you need to match on a larger string but want to only extract a portion of the string, you can use parenthesis to make more groups.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">phone_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;(\d\d\d)-(\d\d\d-\d\d\d\d)&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">search_results</span> <span class="o">=</span> <span class="n">phone_regex</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;Call me at 310-429-4019.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This has created 4 groups shown here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Results: &#39;</span> <span class="o">+</span> <span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">())</span>
</span><span class='line'><span class="n">Results</span><span class="p">:</span> <span class="mi">310</span><span class="o">-</span><span class="mi">429</span><span class="o">-</span><span class="mi">4019</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Results: &#39;</span> <span class="o">+</span> <span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</span><span class='line'><span class="n">Results</span><span class="p">:</span> <span class="mi">310</span><span class="o">-</span><span class="mi">429</span><span class="o">-</span><span class="mi">4019</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Results: &#39;</span> <span class="o">+</span> <span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="n">Results</span><span class="p">:</span> <span class="mi">310</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Results: &#39;</span> <span class="o">+</span> <span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="n">Results</span><span class="p">:</span> <span class="mi">429</span><span class="o">-</span><span class="mi">4019</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Without Regex Compile</h2>

<p>An alternative way to do this is to skip the regex <code>compile()</code> method and use this syntax instead:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">my_string</span> <span class="o">=</span> <span class="s">&quot;Name: Fred, Occupation: Bronto Crane Operator&quot;</span>
</span><span class='line'><span class="n">parse_data</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;Name: (\w*), Occupation: (.*)&#39;</span><span class="p">,</span> <span class="n">my_string</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Results:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">parse_data</span><span class="o">.</span><span class="n">group</span><span class="p">())</span>
</span><span class='line'><span class="n">Name</span><span class="p">:</span> <span class="n">Fred</span><span class="p">,</span> <span class="n">Occupation</span><span class="p">:</span> <span class="n">Bronto</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">parse_data</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="n">Fred</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">parse_data</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="n">Bronto</span> <span class="n">Crane</span> <span class="n">Operator</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Ignore Case</h2>

<p>Use the <code>re.IGNORECASE</code> option to ignore capitalization. Example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">fred_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;fred&#39;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">IGNORECASE</span><span class="p">)</span>
</span><span class='line'><span class="n">search_results</span> <span class="o">=</span> <span class="n">fred_regex</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;His name is Fred.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This produces the following results:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">search_results</span><span class="o">.</span><span class="n">group</span><span class="p">())</span>
</span><span class='line'><span class="n">Fred</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pro Tip: You can use the shortcut <code>re.I</code> instead of <code>re.IGNORECASE</code>.</p>

<h2>Using findall()</h2>

<p>While the <code>search()</code> method finds the first occurrence, the <code>findall()</code> method returns every occurrence.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">phone_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;\d\d\d-\d\d\d-\d\d\d\d&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">search_results</span> <span class="o">=</span> <span class="n">phone_regex</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;You can call me at 310-429-4019 or 310-777-4777.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This turns the <code>search_results</code> variable into a list and has the following results:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">search_results</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;310-429-4019&#39;</span><span class="p">,</span> <span class="s">&#39;310-777-4777&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">search_results</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="mi">310</span><span class="o">-</span><span class="mi">429</span><span class="o">-</span><span class="mi">4019</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">search_results</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'><span class="mi">310</span><span class="o">-</span><span class="mi">777</span><span class="o">-</span><span class="mi">4777</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Substituting Using a Regex</h2>

<p>You can use the <code>sub()</code> method to substitute a string matching a regex. Example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">phone_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;\d\d\d-\d\d\d-\d\d\d\d&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">scrubbed_phone_numbers</span> <span class="o">=</span> <span class="n">phone_regex</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;XXX-XXX-XXXX&#39;</span><span class="p">,</span> <span class="s">&#39;My number is 310-429-4019.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">scrubbed_phone_numbers</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This prints <code>My number is XXX-XXX-XXXX.</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi Zero: Blink an LED using GPIO pins]]></title>
    <link href="https://www.tunnelsup.com/raspberry-pi-zero-blink-an-led-using-gpio-pins/"/>
    <updated>2016-09-14T12:19:00-07:00</updated>
    <id>https://www.tunnelsup.com/raspberry-pi-zero-blink-an-led-using-gpio-pins</id>
    <content type="html"><![CDATA[<p>Want to use the GPIO pins to blink an LED using a Raspberry Pi Zero? Here&rsquo;s a quick guide to get you started.</p>

<h2>Build the circuit</h2>

<p>Do this is the Raspberry Pi off. You don&rsquo;t want to accidentally touch the wrong pin on the Pi and fry the Pi.</p>

<p>Use <a href="http://pinout.xyz">http://pinout.xyz</a> to check the pinouts of the Raspberry Pi.</p>

<p>Create a circuit that goes from GND to LED to resistor to GPIO pin (BCM).</p>

<p><img src="https://www.raspberrypi.org/wp-content/uploads/2015/11/led-gpio17.png" width="500"></p>

<h2>Install the Python Library</h2>

<p>We&rsquo;ll be using python to build our program so first download the python library. There is an api to interface with the GPIO pins which makes this a lot easier.</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install python3-gpiozero python-gpiozero</span></code></pre></td></tr></table></div></figure>


<p><a href="https://gpiozero.readthedocs.io/">https://gpiozero.readthedocs.io/</a> for more information on this library.</p>

<h2>Create the Program</h2>

<p>Now create a file called <code>blink.py</code> and put the following in it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">gpiozero</span> <span class="kn">import</span> <span class="n">LED</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>
</span><span class='line'>
</span><span class='line'><span class="n">led</span> <span class="o">=</span> <span class="n">LED</span><span class="p">(</span><span class="mi">17</span><span class="p">)</span> <span class="c"># Choose the correct pin number</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>    <span class="n">led</span><span class="o">.</span><span class="n">on</span><span class="p">()</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">led</span><span class="o">.</span><span class="n">off</span><span class="p">()</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run the Program</h2>

<p>Run the program with the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">blink</span><span class="o">.</span><span class="n">py</span>
</span></code></pre></td></tr></table></div></figure>


<p>If all went well you should now see your LED blinking!</p>

<h2>References</h2>

<p><a href="https://gpiozero.readthedocs.io/">https://gpiozero.readthedocs.io/</a></p>

<p><a href="https://www.raspberrypi.org/blog/gpio-zero-a-friendly-python-api-for-physical-computing/">https://www.raspberrypi.org/blog/gpio-zero-a-friendly-python-api-for-physical-computing/</a></p>

<p><a href="http://pinout.xyz">http://pinout.xyz</a></p>

<p><a href="https://hackr.io/tutorials/python">https://hackr.io/tutorials/python</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to set a static IP in linux]]></title>
    <link href="https://www.tunnelsup.com/how-to-set-a-static-ip-in-linux/"/>
    <updated>2016-09-12T16:32:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-set-a-static-ip-in-linux</id>
    <content type="html"><![CDATA[<p>The following will work for any debian base linux distro. That includes <strong>Ubuntu</strong>, <strong>Kali</strong>, <strong>Raspberry Pi (Raspian Jessie)</strong>, <strong>TAILS</strong>, and many more.</p>

<h2>Edit Interface Settings</h2>

<p>Edit the config:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>sudo vi /etc/network/interfaces</span></code></pre></td></tr></table></div></figure>


<p>Find the interface you wish to make static and add the following lines:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>        address 192.168.1.100
</span><span class='line'>        network 192.168.1.0
</span><span class='line'>        netmask 255.255.255.0
</span><span class='line'>        broadcast 192.168.1.255
</span><span class='line'>        gateway 192.168.1.1</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>address</code> is the IP you want to assign this host</li>
<li><code>network</code> is the network portion of this subnet. It&rsquo;s usually the same as your static IP but ending in <code>.0</code></li>
<li><code>netmask</code> is the netmask of your subnet. This is usually <code>255.255.255.255</code></li>
<li><code>broadcast</code> is the broadcast IP of this subnet. It&rsquo;s usually the same as your static IP but ending in <code>.255</code></li>
<li><code>gateway</code> is the next hop for this system to go. This is usually a router&rsquo;s IP and it must be in the same subnet as the host address.</li>
</ul>


<h2>Configure DNS</h2>

<p>To resolve hostnames to IP addresses you must configure a DNS server. You can do this by editing the following:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/resolv.conf</span></code></pre></td></tr></table></div></figure>


<p>Add your DNS servers to this file or use Google&rsquo;s public DNS servers like this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>nameserver 4.2.2.2
</span><span class='line'>nameserver 4.2.2.3</span></code></pre></td></tr></table></div></figure>


<h2>Restart networking</h2>

<p>To make these change effective you must restart the networking service. That can be done by doing one of the following:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>sudo /etc/init.d/networking restart</span></code></pre></td></tr></table></div></figure>


<p>If that doesn&rsquo;t work try:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>sudo /etc/init.d/networking reload</span></code></pre></td></tr></table></div></figure>


<p>If that doesn&rsquo;t work try:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>sudo systemctl restart ifup@eth0</span></code></pre></td></tr></table></div></figure>


<h2>Check settings</h2>

<p>Now check if the settings took by running the following command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>ifconfig</span></code></pre></td></tr></table></div></figure>


<p>The output looks like this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>eth0      Link encap:Ethernet  HWaddr d8:eb:97:bd:53:4e
</span><span class='line'>          inet addr:192.168.1.100  Bcast:192.168.1.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::daeb:97ff:febd:534e/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:47436 errors:0 dropped:3117 overruns:0 frame:0
</span><span class='line'>          TX packets:13017 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:5982679 (5.7 MiB)  TX bytes:1837349 (1.7 MiB)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started Cracking Password Hashes with John the Ripper]]></title>
    <link href="https://www.tunnelsup.com/getting-started-cracking-password-hashes/"/>
    <updated>2016-09-08T21:23:00-07:00</updated>
    <id>https://www.tunnelsup.com/getting-started-cracking-password-hashes</id>
    <content type="html"><![CDATA[<p>Want to get started with password cracking and not sure where to begin? In this post we&rsquo;ll explore how to get started with it.</p>

<p>Most systems don&rsquo;t store passwords on them. Instead they store hashes of passwords and when authentication takes place, the password is hashes and if the hashes match authentication is successful. Different systems store password hashes in different ways depending on the encryption used.</p>

<p>Password hash cracking usually consists of taking a wordlist, hashing each word and comparing it against the hash you&rsquo;re trying to crack. This is a variation of a dictionary attack because wordlists often are composed of not just dictionary words but also passwords from public password dumps. This type of cracking becomes difficult when hashes are <a href="https://en.wikipedia.org/wiki/Salt_(cryptography">salted</a>).</p>

<p>The tool we are going to use to do our password hashing in this post is called <strong>John the Ripper</strong>. John is a great tool because it&rsquo;s free, fast, and can do both wordlist style attacks and brute force attacks. A brute force attack is where the program will cycle through every possible character combination until it has found a match.</p>

<h2>Setup</h2>

<p>To get setup we&rsquo;ll need some password hashes and John the Ripper.</p>

<h4>Sample Password Hashes</h4>

<p>A group called KoreLogic used to hold DEFCON competitions to see how well people could crack password hashes. Their contest files are still posted on their site and it offers a great sample set of hashes to begin with.</p>

<p>Download the <a href="http://contest-2012.korelogic.com/">password hash file bundle</a> from the KoreLogic 2012 DEFCON challenge.
Or use this <a href="https://www.tunnelsup.com/images/cmiyc_2012_password_hash_files.tar.bz2">mirror</a>.</p>

<p>Extract the file using this linux command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>tar jxf cmiyc_2012_password_hash_files.tar.bz2</span></code></pre></td></tr></table></div></figure>


<p>This expands into 19 different hashdumps including <code>des</code>, <code>md5</code>, and <code>ntlm</code> type encryption. Each of the 19 files contains thousands of password hashes. This should be a great data set to test our cracking capabilities on.</p>

<h4>John the Ripper</h4>

<p>Next we&rsquo;ll need the cracking tool itself. If you&rsquo;re using Kali Linux, this tool is already installed. Download <a href="http://www.openwall.com/john/">John the Ripper</a> here. In my case I&rsquo;m going to download the free version <code>John the Ripper 1.8.0 (sources, tar.gz, 5.2 MB)</code>.</p>

<p>Once downloaded, extract it with the following linux command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>tar zxvf john-1.8.0.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>Then follow the instructions in docs/INSTALL to complete the install.</p>

<h4>Getting a Wordlist</h4>

<p>We&rsquo;ll need a good wordlist to go through to see if any passwords in it, match our hashes.</p>

<ul>
<li>A basic word list containing 3,559 words can be found bundled in the John the Ripper tarball in the run dir. This is a list of the most common passwords seen in public hash dumps.</li>
<li>If using Kali linux, a good size wordfile is located at <code>/usr/share/wordlists/rockyou.txt.gz</code>. Unzip it with <code>gunzip</code> and you&rsquo;ve got a good wordfile to workwith.</li>
<li>A large word list containing 1,493,677,782 words can be found at <a href="https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.htm">crackstation</a>.</li>
</ul>


<p>The size word list you need depends on your needs. If you have a large hashdump, chances are even cracking 5% of the hashes will result in a victory, which may get you admin access. But if you have a only one password hash, you&rsquo;ll need 100% success rate and probably need a bigger wordlist.</p>

<h2>Basic John Usage</h2>

<p>Use John to begin the cracking with this command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>$ john hashes-3.des.txt
</span><span class='line'>Loaded 10297 password hashes with 3741 different salts (descrypt, traditional crypt(3) [DES 32/32])</span></code></pre></td></tr></table></div></figure>


<p>This simple command does the following:</p>

<ul>
<li>Detected there are 10,297 password hashes in the file and their salts.</li>
<li>Auto detected the passwords were DES encrypted</li>
<li>Will first attempt single crack mode</li>
<li>Will then attempt to use the built in wordlist (most common passwords) to crack passwords</li>
<li>Will then go into incremental mode</li>
</ul>


<h2>Checking Status</h2>

<p>While John the Ripper is running, press any key (like enter) to see a status output. Or to check from another terminal you can run <code>john --status</code>.  The output looks like this:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>DES cracking speed: 94g 0:01:08:34 74% 2/3 0.02284g/s 2784p/s 97648c/s 269491C/s day?..Hal?
</span><span class='line'>1                   2   3          4   5   6          7       8        9         10</span></code></pre></td></tr></table></div></figure>


<p>Here is what each section means:</p>

<ol>
<li>Type of encryption it is trying to crack with</li>
<li>Number of successful password guesses</li>
<li>Time elapsed since started</li>
<li>Percent completed for that pass</li>
<li>Current pass / number of passes total</li>
<li>g/s = successful guesses per second</li>
<li>p/s = passwords tested per second</li>
<li>c/s = crypts (password hashes) computed per second</li>
<li>C/s = crypts tested per second (in versions below 1.8.0 this was &ldquo;c/s&rdquo;)</li>
<li>The current word it&rsquo;s trying.</li>
</ol>


<h2>Passes/Modes</h2>

<p>John has three modes to attempt to crack hashes. If you do not indicate the mode, all 3 will be used and you will see <code>x/3</code> in your status output indicating which mode it&rsquo;s on.</p>

<p>See <a href="http://www.openwall.com/john/doc/MODES.shtml">http://www.openwall.com/john/doc/MODES.shtml</a> for detailed description of each mode.</p>

<h4>(1) Single Crack</h4>

<p>This mode attempts to mangle the username and try it as the password. Example: if the username was &ldquo;jackson&rdquo; it would try the following passwords:</p>

<blockquote><p>jackson <br>
JACKSON <br>
jackson1 <br>
j-ackson <br>
Jackson= <br>
jacks0n <br></p></blockquote>

<p>It tries hundreds of variations of the username. It tries this password on all hashes in your file so the more usernames you give it, the greater chance of it finding something in the single crack mode.</p>

<p>This is a great mode to start with because it&rsquo;s the fastest and sometimes works wonderfully.</p>

<p>To just use this mode do the following:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>john --single hashes-3.des.txt</span></code></pre></td></tr></table></div></figure>


<h4>(2) Wordlist Mode</h4>

<p>In this mode, John is using a wordlist to hash each word and compare the hash with the password hash. If you do not indicate a wordlist, John will use the one it comes bundled with which has about 3,500 words which are the most common passwords seen in password dumps.</p>

<p>To use try just the wordlist mode do the following:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>john --wordlist=password.lst hashes-3.des.txt</span></code></pre></td></tr></table></div></figure>


<h4>(3) Incremental</h4>

<p>Attempts a brute force style attack, trying every combination of characters possible. This type of attempt will never complete because it will just keep trying higher and higher password lengths.</p>

<p>To try just the incremental mode, do this command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>john --incremental hashes-3.des.txt</span></code></pre></td></tr></table></div></figure>


<h2>Word mangling rules</h2>

<p>John has the ability to take a wordlist and mangle the words in it to try variations of that word. It will add numbers to the end of the word and try replacing letters with numbers and adding other random symbols. So if the word list contains the word <code>jackson</code>, with <code>rules</code> turned on it would try each of these plus hundreds more.</p>

<blockquote><p>jackson <br>
JACKSON <br>
jackson1 <br>
j-ackson <br>
Jackson= <br>
jacks0n <br></p></blockquote>

<p>By simply enabling <code>--rules</code> when invoking John, the mangling rules applied are usually decent. However, you can modify the config file to alter the way the mangling is done. Read here for further information on how to do that:</p>

<p><a href="http://www.openwall.com/john/doc/RULES.shtml">http://www.openwall.com/john/doc/RULES.shtml</a></p>

<p>Additionally you can see what others have used for rules like KoreLogic:</p>

<p><a href="http://contest-2010.korelogic.com/rules.html">http://contest-2010.korelogic.com/rules.html</a></p>

<h2>Final Example</h2>

<p>To use a larger word list, with DES encryption only, and rule mangling turned on, use the following:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>john --format:descrypt --wordlist=crackstation-human-only.txt --rules hashes-3.des.txt</span></code></pre></td></tr></table></div></figure>


<p>The best way to get John to run in the background is using the standard linux <code>screen</code> command.</p>

<h2>Resources</h2>

<p><a href="http://www.openwall.com/john/doc/">http://www.openwall.com/john/doc/</a></p>

<p><a href="http://www.openwall.com/john/doc/EXAMPLES.shtml">http://www.openwall.com/john/doc/EXAMPLES.shtml</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to do an SNMP walk]]></title>
    <link href="https://www.tunnelsup.com/how-to-do-an-snmp-walk/"/>
    <updated>2016-08-24T15:53:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-do-an-snmp-walk</id>
    <content type="html"><![CDATA[<p>Sometimes you need to manually SNMP poll a device. Here is how to do that.</p>

<h2>Do an entire pull</h2>

<p>To conduct a full SNMP walk and get all OIDs, do the following from a linux command line:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -v 2c -c publicstring 192.168.1.1</span></code></pre></td></tr></table></div></figure>


<p>In the example above we indicate the SNMP version (-v) is 2c, the community string (-c) is publicstring and the IP to SNMP poll is 192.168.1.1.</p>

<p>This will return all OIDs that are pollable on that system.</p>

<h2>Poll a single MIB</h2>

<p>You can add a mib to the end of the snmpwalk command to poll a single mib and get only that result. Here is an example:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -v 2c -c publicstring 192.168.1.1 mib-2.47.1.1.1.1.5.7</span></code></pre></td></tr></table></div></figure>


<p>You can also poll an attribute such as sysDescr like so:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>snmpwalk -v 2c -c publicstring 192.168.1.1 mib-2.47.1.1.1.1.5.7</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to show and clear user sessions on a Cisco ASA]]></title>
    <link href="https://www.tunnelsup.com/how-to-show-and-clear-user-sessions-on-a-cisco-asa/"/>
    <updated>2016-06-18T16:36:00-07:00</updated>
    <id>https://www.tunnelsup.com/how-to-show-and-clear-user-sessions-on-a-cisco-asa</id>
    <content type="html"><![CDATA[<p>Sometimes you need to disconnect someone&rsquo;s ssh session to a Cisco ASA. This may be needed because users haven&rsquo;t logged out properly and have taken up all the sessions allowed.</p>

<h2>Check Usage Limits</h2>

<p>You can check usage limits by seeing how many sessions the ASA <em>thinks</em> are connected.</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>FWL1# show resource usage resource ssh
</span><span class='line'>Resource                 Current        Peak      Limit        Denied Context
</span><span class='line'>SSH Server                     5           5          5           109 System</span></code></pre></td></tr></table></div></figure>


<p>In this case the ASA can only connect 5 years and it thinks there are 5 sessions open and therefore it cannot connect any more.</p>

<p>There&rsquo;s a bug that doesn&rsquo;t properly release sessions from the ASA. <a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCsm68097">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCsm68097</a></p>

<h2>Show current ssh sessions</h2>

<p>To display all ssh sessions connected run this command.</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>FWL1# show ssh sessions                        
</span><span class='line'>SID Client IP       Version Mode Encryption Hmac     State            Username
</span><span class='line'>0   10.1.1.21       2.0     IN   aes128-ctr sha1     SessionStarted   james
</span><span class='line'>                            OUT  aes128-ctr sha1     SessionStarted   james
</span><span class='line'>2   10.1.1.22       2.0     IN   aes128-ctr sha1     SessionStarted   frank
</span><span class='line'>                            OUT  aes128-ctr sha1     SessionStarted   frank
</span><span class='line'>3   10.1.1.20       2.0     IN   aes128-ctr sha1     SessionStarted   henry
</span><span class='line'>                            OUT  aes128-ctr sha1     SessionStarted   henry
</span></code></pre></td></tr></table></div></figure>


<h2>Disconnect user</h2>

<p>If you want to disconnect user henry, find the SID and use this command:</p>

<figure class='code'><div class="highlight"><table><tr></pre></td><td class='code'><pre><code class=''><span class='line'>FWL1# ssh disconnect 3</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips For Attending a Security Conference]]></title>
    <link href="https://www.tunnelsup.com/tips-for-attending-a-security-conference/"/>
    <updated>2016-05-27T11:32:00-07:00</updated>
    <id>https://www.tunnelsup.com/tips-for-attending-a-security-conference</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re in the InfoSec industry and haven&rsquo;t attended a security conference, you simply aren&rsquo;t taking your career seriously. Attending one will inspire you and motivate you to learn new things, meet new people, and find new solutions to your problems. There are so many conferences now that there is about 2-5 every month! A realistic goal could be to attend one security conference a year.</p>

<h2>Types of Conferences</h2>

<p>There are two different types of conferences: <strong>community driven</strong> and <strong>vendor driven</strong>. Community driven conferences are like <a href="https://defcon.org/">DefCon</a> and BSides. These have speakers from the InfoSec community and very little corporate vendor booths. Vendor driven conferences are like <a href="http://www.rsaconference.com/">RSA Conf</a> or <a href="http://www.ciscolive.com/us/">Cisco Live</a> which has a massive vendor floor and almost all the talks are given to vendors to either pitch their solutions or talk on something else.</p>

<p>If you&rsquo;re in a management or in a leadership position, you may prefer the vendor based ones to learn what solutions vendors have today that can solve your problems.</p>

<p>If you&rsquo;re highly technical then a community based one will help you solve problems you may be facing by getting in the weeds and getting technical with others.</p>

<h2>Tips for Getting the Most Out of a Conference</h2>

<h4>Meet people</h4>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">One of the biggest reasons I go to security conferences and meetups. <a href="https://twitter.com/hashtag/infosec?src=hash">#infosec</a> <a href="https://t.co/Y0HB9dtchO">pic.twitter.com/Y0HB9dtchO</a></p>&mdash; Jack Rhysider (@TunnelsUp) <a href="https://twitter.com/TunnelsUp/status/730938951696060416">May 13, 2016</a></blockquote>


<script async src="https://www.tunnelsup.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Meeting people who have the same problems or passions than I do is the most important thing on my agenda when attending these conferences. Finding new people to share ideas with, solve your problems, or teach you how to improve is a resource you can use for years. Having a secret weapon of someone you can ask tough questions to outside of work will make you look like an endless fountain of information.</p>

<p>A few ways to meet people:</p>

<ul>
<li>If you&rsquo;re active on Twitter, find out which of your tweeps are attending and make time to meet them.</li>
<li>Join a team event with people you don&rsquo;t know, such as a workshop or contest.</li>
<li>Be a speaker! You&rsquo;ll have many people wanting to talk to you after.</li>
<li>Ask a ton of questions. See something you aren&rsquo;t familiar with? Don&rsquo;t be afraid to ask what it is or how it works. See someone else asking smart questions? Talk to them about your thoughts on the questions.</li>
<li>Go to after parties where the conversations keep going.</li>
</ul>


<p><a href="https://twitter.com/irongeek_adc">Adrian Crenshaw</a> from <a href="http://www.irongeek.com/">IronGeek</a> has attended dozens of conferences. When asked about what he suggests doing at conference he wrote:</p>

<blockquote><p>Don&rsquo;t neglect hallway con.</p></blockquote>

<p>He&rsquo;s suggesting to talk to people in line, or in the hallway, or in the chair next to you as you wait for a talk to start. Getting to know people at these conference is an extremely valuable resource.</p>

<h4>Talks</h4>

<p>Talks are the main event of any conference. Often there are multiple talks going on at once so it&rsquo;s a good idea to get the schedule before arriving so you can plan your day.</p>

<p>But you don&rsquo;t have to attend the talks! In 2015 there were over <a href="https://www.tunnelsup.com/online-security-conferences/">50 security conferences</a> that recorded their talks and posted them free online. If your conference is recording them, feel free to skip the live ones and just watch them later.</p>

<p>If you watch a talk you enjoyed or agreed with, follow that speaker on Twitter. There is a huge Twitter community of InfoSec professionals and they&rsquo;d be happy to answer any follow up questions you have later.</p>

<p>Don&rsquo;t like the talk 5 minutes in? Don&rsquo;t be embarrassed to leave. It&rsquo;s your time and you should do whatever you want. This kind of makes it hard when you are attending conferences with friends or a group because if you separate mid talk it&rsquo;s hard to find each other.</p>

<h4>Watch your electronics</h4>

<p>If you&rsquo;re going to a hacker con such as DefCon, make sure to leave your work and personal electronics at home. Bring a burner phone and burner laptop. Stuff you won&rsquo;t care too badly about if it gets hacked into. Bring a pad and paper if you want to take notes.</p>

<h4>Participate</h4>

<p>Some conferences have workshops, villages, contests, mini-breakout sessions, and more. If there is a contest, try competing. Your goal isn&rsquo;t to win, it&rsquo;s simply to not get last place. If you can achieve that, you&rsquo;re a winner. As you participate in these activities, you&rsquo;ll learn new skills and meet new friends. Doing hands on activities will likely help you learn a lot more than listening to a talk.</p>

<h4>Vendors</h4>

<p>Talk to vendors you don&rsquo;t know and find out what they do. Often I learn that they solve problems I didn&rsquo;t even know existed. This kind of information can help broaden your understanding of the InfoSec space. Often, vendors will give out free things like tshirts and flashlights you can take back for your friends in the office. Take as much of this as you want.</p>

<h4>Secret stuff</h4>

<p>Some conferences have hidden stuff that is hard to get into. Often there are exclusive parties for customers or friends. Once, I found a hidden party through a trick door inside a phone booth. There are sometimes even hidden talks. DefCon has a thing called SkyTalks which are smaller rooms, and not recorded. This intimate setting allows speakers to tell a little more than they probably should.</p>

<h4><a href="http://www.securitybsides.com/">BSides</a></h4>

<p>Many of the major conferences have smaller <a href="http://www.securitybsides.com/">BSides</a> conferences in the same city near the same time as the larger one. These smaller BSides conferences are a lot cheaper to attend and are much more community oriented. They are definitely worth checking out and there may even be one in your town.</p>

<h2>Summary</h2>

<p>I hope some of these tips are helpful to you and I hope to see you at a future conference. Do you have any more tips that are helpful for attending conferences? Leave a comment below to let us all know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Who Makes up a Computer Security Incident Response Team]]></title>
    <link href="https://www.tunnelsup.com/who-makes-up-an-computer-security-incident-response-team/"/>
    <updated>2016-05-25T10:50:00-07:00</updated>
    <id>https://www.tunnelsup.com/who-makes-up-an-computer-security-incident-response-team</id>
    <content type="html"><![CDATA[<p>The incident response team is who is engaged when an network security incident has occurred in your network. There are two types of IR teams, SWAT style and dedicated.</p>

<p><a href="https://twitter.com/hacks4pancakes">Lesley Carhart</a> defines an IR team goal as:</p>

<blockquote><p>The goal of an incident response team is to reduce the time and money lost due to an incident.</p></blockquote>

<h2>SWAT Teams</h2>

<p>In smaller organizations, where security incidents are not very common or severe, a SWAT team works best. This is simply an adhoc group of people who are most familiar with the impacted systems. Such as the system admins and network admins. Once the incident is contained, these people go back to their normal jobs.</p>

<h2>Dedicated Teams</h2>

<p>In a dedicated incident response team, the roles are more specifically defined. This team is also sometimes known as a Computer Incident Response Team (CIRT), or Computer Security Incident Response Team (CSIRT).</p>

<p>Roles of a CSIRT:
<img src="https://www.tunnelsup.com/images/dfirteam.png" alt="CIRT Team Roles" /></p>

<h4>SOC Monitoring Team</h4>

<p>While not exactly part of the IR team, the security operations center is usually where security incidents are first detected. This team will monitor logs and events 24/7 and hunt for threats in the network. They will report the incidents they find to the IR team.</p>

<h4>Incident Handlers</h4>

<p>It&rsquo;s difficult to work towards resolving an incident while also giving reports to leadership or other stake holders. The incident handler makes sure the proper teams are engaged to respond to the incident, and they also give updates to leadership and other teams who may be interested in knowing about the the incident status. They may join conference calls to relay information to different teams.</p>

<h4>Malware Investigator</h4>

<p>Sometimes an AV scan can&rsquo;t find the malware on a system. Malware investigators will find the malware and possibly extract it to further study it. They are very familiar with what is normal on a system compared to what is not normal. They also will be able to tell what activity the malware has, such as spreading or any command and control it may be trying to do.</p>

<h4>Digital Forensics</h4>

<p>This team will try to find more information about what the system experienced during the incident. Did records get deleted or moved? Who accessed this system? What actions did users take on that system? Did they leave anything behind, like keyloggers or rootkits? What connections did it made? Knowing these things may be important to determining how wide spread the incident is or the extent of the damage.</p>

<p>In the case of a PCI certified organization getting breached, the organization must be able to replay the attack so they can prove they understand how the attacker accessed the network. A digital forensics specialist will help significantly with this type of investigation.</p>

<h4>Threat Intelligence Team</h4>

<p>This team will get to know who the adversary is, what their motive was, what their target was, and what techniques they used. Finding who did the attack may be helpful for carrying out legal responses to the attacker. Finding out what their motive is will help the risk manager know why we are a target for attacks. Finding out what techniques were used will help the SOC identify future attacks. This team can spend 6 months or longer investigating a single incident to feel confident with the assessment results. They will use all the evidence the malware and forensics teams find, as well as work with other teams to collect as much evidence as possible to create their assessment. They will often use Open Source Intelligence (OSINT) to research adversaries, malware history, APT reports, etc.</p>

<h4>IT Staff</h4>

<p>Often, the best person to spot something being abnormal is the person who owns that system. They are also usually the most familiar with that system and can help with any troubleshooting or information gathering that may need to be done on the system.</p>

<h4>Security Engineer</h4>

<p>Security engineers and architects should be working towards making the network more secure by reviewing past incidents and then putting configurations in place to protect against future attacks. Once an organization is hit once from a specific attack, the organization should learn what that is and put safeguards in place to not be hit by that same attack again. This is where security engineering can protect the network proactivly.</p>

<h4>Pen Testers</h4>

<p>If an attack supposedly got int through a non-secure website, a pen tester can try to recreate that attack to see if it is possible. Sometimes the system owners believe their application is secure and it takes a pen tester to show them it isn&rsquo;t. Also, a pen tester can learn from the adversary what type of attack was conducted and attempt to use that attack on other systems to see if they are vulnerable too.</p>

<h4>Leadership</h4>

<p>The leadership team is one of the most important because without proper leadership, the security team will be limited and without vision or direction. Proper buy in from leadership is crucial in order for the rest of the organization to respect and see value in the IR team. Leadership may also be called in to make decisions that may impact business such as taking down key servers that are infected which may stop business for hours or days. It&rsquo;s also important for leadership to take action on communicating breaches to customers. Leadership will also decide the course of action when responding to an attack. This may be calling the police, or FBI, or even attacking back.</p>

<h4>Various Other Teams</h4>

<p>Teams such as HR, Legal, and Branding all make up the IR team if there are incidents that impact these parts of the organization. Security can impact the entire organization and these teams are specialized in their own areas and should be aware of problems in those areas. These teams can also help navigate how to resolve some incidents such as firing an employee which was caught showing malicious activity inside the network.</p>

<h2>Further Information</h2>

<p>To learn more about this topic, check out this free 3 hour long workshop on youtube by <a href="https://twitter.com/hacks4pancakes">Lesley Carhart</a> called <strong><a href="https://www.youtube.com/watch?v=LYGi12N6oFQ">Building an Incident Response Program</a></strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things You Can Do to Make Security Worse]]></title>
    <link href="https://www.tunnelsup.com/things-you-can-do-to-make-security-worse/"/>
    <updated>2016-05-19T17:58:00-07:00</updated>
    <id>https://www.tunnelsup.com/things-you-can-do-to-make-security-worse</id>
    <content type="html"><![CDATA[<p>Organizations go out of their way to make security worse in their network. Are you one of these organizations? Watch the video to find out.</p>

<iframe width="770" height="460" src="https://www.youtube.com/embed/9EAi_O4JKZk" frameborder="0" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Security Awareness Training Posters]]></title>
    <link href="https://www.tunnelsup.com/free-security-awareness-training-posters/"/>
    <updated>2016-05-10T07:53:00-07:00</updated>
    <id>https://www.tunnelsup.com/free-security-awareness-training-posters</id>
    <content type="html"><![CDATA[<p>Something that is helpful for ongoing security awareness training programs is to print out security awareness posters and put them in areas where people hang out around the office. The goal is to keep security awareness training fresh, fun, and relevant.</p>

<p>Here are some free posters you can find online to download and print for your own organization.</p>

<h2>OPSEC Professionals</h2>

<p><a href="http://www.opsecprofessionals.org/posters.html">http://www.opsecprofessionals.org/posters.html</a></p>

<p>&ldquo;The following OPSEC awareness posters are free for personal or professional (non-commercial) use, and may be edited or published in any OPSEC awareness campaign. Although not required, credit to OSPA is appreciated.&rdquo;</p>

<h2>The Center for the Development of Security Excellence</h2>

<p><a href="http://www.cdse.edu/resources/posters.html">http://www.cdse.edu/resources/posters.html</a></p>

<h2>SANS Posters</h2>

<p>Their &lsquo;Securing the Humans&rsquo; posters are free to use under the Creative Commons License.
<a href="http://securingthehuman.sans.org/resources/posters">http://securingthehuman.sans.org/resources/posters</a></p>

<h2>Native Intelligence</h2>

<p><a href="http://www.nativeintelligence.com/ni-free/ni-free-posters.asp">http://www.nativeintelligence.com/ni-free/ni-free-posters.asp</a></p>

<p>They have posters you can download but they say, &ldquo;Copyrights must stay with the free posters, the posters must not be changed, and the images must not be extracted.&rdquo;</p>

<p>These posters are kind of low quality but <a href="https://twitter.com/TessSchrodinger">@TessSchrodinger</a> thinks it&rsquo;s a great place for inspiration to make your own posters. She says:</p>

<blockquote><p>If you look at the first poster with the &ldquo;big gulp&rdquo;&hellip; I&rsquo;d just take that idea, make my own poster with a graphic of a big gulp cup I found online and be done with it. So I use these for ideas to make my own stuff.</p></blockquote>

<p>Tess Shrodinger has a fantastic talk about how to use these kinds of posters in her security awareness training program called <a href="https://www.youtube.com/watch?v=5CIzGg_pHNU">Do You Want Educated Users? Because This is How You Get Educated Users</a>.</p>

<h2>NSA</h2>

<p>The NSA has some really nice posters but you have to work in industry and send a fax to get a catalog that comes in the mail six months later and then you submit your hand written order via fax AGAIN and then six months later you get a tube with them in it. They are nice but you have to go through a lot of hoops to get them.</p>
]]></content>
  </entry>
  
</feed>
